<template>
  <view>
		<!-- Case1: Type Narrowing 类型收窄 -->
    <view wx:if="{{ typeof msg === 'string'}}">
      msg should be string: {{ msg }}
    </view>
    <view wx:elif="{{ typeof msg === 'number' }}">
      msg should be number: {{ msg }}
    </view>
    <view wx:else>
      msg should be undefined: {{ msg }}
    </view>

		<!-- Case2: Type Narrowing for undefined -->
		<view wx:if="{{ status }}">
			{{ status.message }}
		</view>

		<!-- Case3: Type Narrowing -->
		<view wx:if="{{ typeof foo === 'string' }}">
			{{ foo }}
		</view>

    <!-- Case4: 表达式带空格 -->
     <view wx:if="  {{ status?.message && msg }}"></view>
  </view>
</template>

<script setup lang="ts">
import { ref } from "@mpxjs/core"

let msg = ref<string | number>()
let status: { message: string } | undefined;
let foo: any

defineExpose({
  msg,
	status,
	foo
 })
</script>
